# Query: 5000
# ContextLines: 1

10 results - 8 files

frontend\src\Components\StDashboard.js:
  10        try {
  11:         const response = await axios.get(`http://localhost:5001/api/student/${studentId}`);
  12          setStudent(response.data);

frontend\src\Components\Admin\AdminReview.js:
   8    useEffect(() => {
   9:     axios.get("http://localhost:5001/api/student?status=pending")  // Ensure 'status=pending' is passed correctly
  10        .then(response => setPendingStudents(response.data))

  19        // Update the student status
  20:       await axios.patch(`http://localhost:5001/api/student/${studentId}`, { status: newStatus });
  21  

frontend\src\Components\Authentication\Login.js:
  10      try {
  11:       const response = await fetch('http://localhost:5001/api/auth/login', {
  12          method: 'POST',

frontend\src\Components\Authentication\Register.js:
  24      try {
  25:       const response = await axios.post('http://localhost:5001/api/auth/register', formData);
  26  

frontend\src\Components\Authentication\StudentLogin.js:
  12      try {
  13:       const response = await fetch("http://localhost:5001/api/auth/logins", {
  14          method: "POST",

frontend\src\Components\StudentManagement\Profile.js:
  11        try {
  12:         const response = await fetch(`http://localhost:5001/api/student/${id}`, {
  13            headers: {

frontend\src\Components\StudentManagement\StudentList.js:
  8    useEffect(() => {
  9:     axios.get('http://localhost:5001/api/student')
  10        .then(response => {

frontend\src\Components\StudentManagement\StudentRegisterForm.js:
  20      axios
  21:       .get("http://localhost:5001/api/groups")
  22        .then((response) => setGroups(response.data))

  81        try {
  82:         const response = await axios.post("http://localhost:5001/api/student", {
  83            ...studentData,
